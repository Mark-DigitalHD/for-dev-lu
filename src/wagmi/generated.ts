// Generated by @wagmi/cli@1.2.0 on 6/16/2023 at 8:43:41 AM
import {
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  Address,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
} from 'wagmi'
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// mechaFutures
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export const mechaFuturesABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'customBaseURI_', internalType: 'string', type: 'string' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_MULTIMINT',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_SUPPLY',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'PRICE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'count', internalType: 'uint256', type: 'uint256' }],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: 'salePrice', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'royaltyInfo',
    outputs: [
      { name: 'receiver', internalType: 'address', type: 'address' },
      { name: 'royaltyAmount', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'saleIsActive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'customBaseURI_', internalType: 'string', type: 'string' },
    ],
    name: 'setBaseURI',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'saleIsActive_', internalType: 'bool', type: 'bool' }],
    name: 'setSaleIsActive',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'withdraw',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export const mechaFuturesAddress = {
  1: '0x127eB7b87CBb33Ade80961eb026996109A936a35',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export const mechaFuturesConfig = {
  address: mechaFuturesAddress,
  abi: mechaFuturesABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// housePlants
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export const housePlantsABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'customBaseURI_', internalType: 'string', type: 'string' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'approved',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'operator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'tokenId',
        internalType: 'uint256',
        type: 'uint256',
        indexed: true,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [{ name: 'count', internalType: 'uint256', type: 'uint256' }],
    name: 'GrowPlants',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'HousePlantsReserve',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_MULTIMINT',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'MAX_SUPPLY',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'PRICE',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_to', internalType: 'address', type: 'address' },
      { name: '_reserveAmount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'reserveHousePlants',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: '_data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'saleIsActive',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'customBaseURI_', internalType: 'string', type: 'string' },
    ],
    name: 'setBaseURI',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'saleIsActive_', internalType: 'bool', type: 'bool' }],
    name: 'setSaleIsActive',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'tokenOfOwnerByIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'withdraw',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export const housePlantsAddress = {
  1: '0x32887799bA0d479fa9495c4f1dd28178b37068e5',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export const housePlantsConfig = {
  address: housePlantsAddress,
  abi: housePlantsABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"MAX_MULTIMINT"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesMaxMultimint<
  TFunctionName extends 'MAX_MULTIMINT',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'MAX_MULTIMINT',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"MAX_SUPPLY"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesMaxSupply<
  TFunctionName extends 'MAX_SUPPLY',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'MAX_SUPPLY',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"PRICE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesPrice<
  TFunctionName extends 'PRICE',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'PRICE',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesBalanceOf<
  TFunctionName extends 'balanceOf',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesGetApproved<
  TFunctionName extends 'getApproved',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesIsApprovedForAll<
  TFunctionName extends 'isApprovedForAll',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesName<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesOwnerOf<
  TFunctionName extends 'ownerOf',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"royaltyInfo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesRoyaltyInfo<
  TFunctionName extends 'royaltyInfo',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'royaltyInfo',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"saleIsActive"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSaleIsActive<
  TFunctionName extends 'saleIsActive',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'saleIsActive',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSupportsInterface<
  TFunctionName extends 'supportsInterface',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSymbol<
  TFunctionName extends 'symbol',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesTokenUri<
  TFunctionName extends 'tokenURI',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesTotalSupply<
  TFunctionName extends 'totalSupply',
  TSelectData = ReadContractResult<typeof mechaFuturesABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof mechaFuturesABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractRead({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<
    typeof mechaFuturesABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          string
        >['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof mechaFuturesABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, TFunctionName, TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesApprove<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'approve'
        >['request']['abi'],
        'approve',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<typeof mechaFuturesABI, 'approve', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'approve', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesMint<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'mint'
        >['request']['abi'],
        'mint',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'mint' }
    : UseContractWriteConfig<typeof mechaFuturesABI, 'mint', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'mint'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'mint', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'mint',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesRenounceOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'renounceOwnership'
        >['request']['abi'],
        'renounceOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<
        typeof mechaFuturesABI,
        'renounceOwnership',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'renounceOwnership', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSafeTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'safeTransferFrom'
        >['request']['abi'],
        'safeTransferFrom',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<
        typeof mechaFuturesABI,
        'safeTransferFrom',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'safeTransferFrom', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSetApprovalForAll<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'setApprovalForAll'
        >['request']['abi'],
        'setApprovalForAll',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<
        typeof mechaFuturesABI,
        'setApprovalForAll',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'setApprovalForAll', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"setBaseURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSetBaseUri<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'setBaseURI'
        >['request']['abi'],
        'setBaseURI',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setBaseURI' }
    : UseContractWriteConfig<typeof mechaFuturesABI, 'setBaseURI', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setBaseURI'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'setBaseURI', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'setBaseURI',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"setSaleIsActive"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesSetSaleIsActive<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'setSaleIsActive'
        >['request']['abi'],
        'setSaleIsActive',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSaleIsActive'
      }
    : UseContractWriteConfig<
        typeof mechaFuturesABI,
        'setSaleIsActive',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSaleIsActive'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'setSaleIsActive', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'setSaleIsActive',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'transferFrom'
        >['request']['abi'],
        'transferFrom',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<typeof mechaFuturesABI, 'transferFrom', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'transferFrom', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'transferOwnership'
        >['request']['abi'],
        'transferOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<
        typeof mechaFuturesABI,
        'transferOwnership',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'transferOwnership', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesWithdraw<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof mechaFuturesAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof mechaFuturesABI,
          'withdraw'
        >['request']['abi'],
        'withdraw',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }
    : UseContractWriteConfig<typeof mechaFuturesABI, 'withdraw', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<typeof mechaFuturesABI, 'withdraw', TMode>({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"mint"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesMint(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'mint'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'mint',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'mint'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof mechaFuturesABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof mechaFuturesABI,
    'safeTransferFrom'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof mechaFuturesABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"setBaseURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesSetBaseUri(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'setBaseURI'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'setBaseURI',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'setBaseURI'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"setSaleIsActive"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesSetSaleIsActive(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'setSaleIsActive'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'setSaleIsActive',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'setSaleIsActive'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof mechaFuturesABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link mechaFuturesABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function usePrepareMechaFuturesWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'withdraw'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof mechaFuturesABI, 'withdraw'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mechaFuturesABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof mechaFuturesABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractEvent({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    ...config,
  } as UseContractEventConfig<typeof mechaFuturesABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mechaFuturesABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof mechaFuturesABI, 'Approval'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractEvent({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof mechaFuturesABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mechaFuturesABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof mechaFuturesABI, 'ApprovalForAll'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractEvent({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof mechaFuturesABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mechaFuturesABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof mechaFuturesABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractEvent({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof mechaFuturesABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link mechaFuturesABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x127eB7b87CBb33Ade80961eb026996109A936a35)
 */
export function useMechaFuturesTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof mechaFuturesABI, 'Transfer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof mechaFuturesAddress } = {} as any,
) {
  return useContractEvent({
    abi: mechaFuturesABI,
    address: mechaFuturesAddress[1],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof mechaFuturesABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"HousePlantsReserve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsHousePlantsReserve<
  TFunctionName extends 'HousePlantsReserve',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'HousePlantsReserve',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"MAX_MULTIMINT"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsMaxMultimint<
  TFunctionName extends 'MAX_MULTIMINT',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'MAX_MULTIMINT',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"MAX_SUPPLY"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsMaxSupply<
  TFunctionName extends 'MAX_SUPPLY',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'MAX_SUPPLY',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"PRICE"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsPrice<
  TFunctionName extends 'PRICE',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'PRICE',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsBalanceOf<
  TFunctionName extends 'balanceOf',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"getApproved"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsGetApproved<
  TFunctionName extends 'getApproved',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"isApprovedForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsIsApprovedForAll<
  TFunctionName extends 'isApprovedForAll',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsName<
  TFunctionName extends 'name',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"ownerOf"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsOwnerOf<
  TFunctionName extends 'ownerOf',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"saleIsActive"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSaleIsActive<
  TFunctionName extends 'saleIsActive',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'saleIsActive',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"supportsInterface"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSupportsInterface<
  TFunctionName extends 'supportsInterface',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'supportsInterface',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSymbol<
  TFunctionName extends 'symbol',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"tokenByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTokenByIndex<
  TFunctionName extends 'tokenByIndex',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"tokenOfOwnerByIndex"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTokenOfOwnerByIndex<
  TFunctionName extends 'tokenOfOwnerByIndex',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'tokenOfOwnerByIndex',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"tokenURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTokenUri<
  TFunctionName extends 'tokenURI',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTotalSupply<
  TFunctionName extends 'totalSupply',
  TSelectData = ReadContractResult<typeof housePlantsABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractRead({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof housePlantsABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          string
        >['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof housePlantsABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, TFunctionName, TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"GrowPlants"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsGrowPlants<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'GrowPlants'
        >['request']['abi'],
        'GrowPlants',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'GrowPlants' }
    : UseContractWriteConfig<typeof housePlantsABI, 'GrowPlants', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'GrowPlants'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'GrowPlants', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'GrowPlants',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsApprove<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'approve'
        >['request']['abi'],
        'approve',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<typeof housePlantsABI, 'approve', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'approve', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsRenounceOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'renounceOwnership'
        >['request']['abi'],
        'renounceOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<
        typeof housePlantsABI,
        'renounceOwnership',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'renounceOwnership', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"reserveHousePlants"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsReserveHousePlants<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'reserveHousePlants'
        >['request']['abi'],
        'reserveHousePlants',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'reserveHousePlants'
      }
    : UseContractWriteConfig<
        typeof housePlantsABI,
        'reserveHousePlants',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'reserveHousePlants'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'reserveHousePlants', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'reserveHousePlants',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSafeTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'safeTransferFrom'
        >['request']['abi'],
        'safeTransferFrom',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      }
    : UseContractWriteConfig<
        typeof housePlantsABI,
        'safeTransferFrom',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'safeTransferFrom', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSetApprovalForAll<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'setApprovalForAll'
        >['request']['abi'],
        'setApprovalForAll',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      }
    : UseContractWriteConfig<
        typeof housePlantsABI,
        'setApprovalForAll',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'setApprovalForAll', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"setBaseURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSetBaseUri<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'setBaseURI'
        >['request']['abi'],
        'setBaseURI',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setBaseURI' }
    : UseContractWriteConfig<typeof housePlantsABI, 'setBaseURI', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setBaseURI'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'setBaseURI', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'setBaseURI',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"setSaleIsActive"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsSetSaleIsActive<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'setSaleIsActive'
        >['request']['abi'],
        'setSaleIsActive',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setSaleIsActive'
      }
    : UseContractWriteConfig<
        typeof housePlantsABI,
        'setSaleIsActive',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setSaleIsActive'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'setSaleIsActive', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'setSaleIsActive',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTransferFrom<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'transferFrom'
        >['request']['abi'],
        'transferFrom',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<typeof housePlantsABI, 'transferFrom', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'transferFrom', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'transferOwnership'
        >['request']['abi'],
        'transferOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<
        typeof housePlantsABI,
        'transferOwnership',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'transferOwnership', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsWithdraw<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof housePlantsAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof housePlantsABI,
          'withdraw'
        >['request']['abi'],
        'withdraw',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }
    : UseContractWriteConfig<typeof housePlantsABI, 'withdraw', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<typeof housePlantsABI, 'withdraw', TMode>({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"GrowPlants"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsGrowPlants(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'GrowPlants'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'GrowPlants',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'GrowPlants'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof housePlantsABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"reserveHousePlants"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsReserveHousePlants(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'reserveHousePlants'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'reserveHousePlants',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof housePlantsABI,
    'reserveHousePlants'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"safeTransferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsSafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'safeTransferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"setApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsSetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'setApprovalForAll'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof housePlantsABI,
    'setApprovalForAll'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"setBaseURI"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsSetBaseUri(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'setBaseURI'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'setBaseURI',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'setBaseURI'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"setSaleIsActive"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsSetSaleIsActive(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'setSaleIsActive'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'setSaleIsActive',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'setSaleIsActive'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof housePlantsABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link housePlantsABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function usePrepareHousePlantsWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<typeof housePlantsABI, 'withdraw'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof housePlantsABI, 'withdraw'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link housePlantsABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof housePlantsABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractEvent({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    ...config,
  } as UseContractEventConfig<typeof housePlantsABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link housePlantsABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof housePlantsABI, 'Approval'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractEvent({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof housePlantsABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link housePlantsABI}__ and `eventName` set to `"ApprovalForAll"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof housePlantsABI, 'ApprovalForAll'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractEvent({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof housePlantsABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link housePlantsABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof housePlantsABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractEvent({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof housePlantsABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link housePlantsABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0x32887799ba0d479fa9495c4f1dd28178b37068e5)
 */
export function useHousePlantsTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof housePlantsABI, 'Transfer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof housePlantsAddress } = {} as any,
) {
  return useContractEvent({
    abi: housePlantsABI,
    address: housePlantsAddress[1],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof housePlantsABI, 'Transfer'>)
}
